include /components/atoms/heading/index
include /components/atoms/svg-icon/index

//- @pugdoc
  name: accordion
  description: create accordion component
  beforeEach: |
    include ../../utils/util
    include ../../atoms/heading/index
    include ../../atoms/svg-icon/index
  arguments:
    - {object} props
    - {string} props.headingLevel [2] heading level of header in accordion
    - |
      {number} [props.activatedIndex] The index number of the panel that
      you want to initially open
  slots:
    - accordionHeadingSlot the slot for heading of accordion item
    - accordionPanelSlot the slot for panel of accordion item
  examples:
    - |
      +accordion({headingLevel: 2, activatedIndex: 1})
        +accordionHeadingSlot heading 1
        +accordionPanelSlot panel 1
        +accordionHeadingSlot heading 2
        +accordionPanelSlot panel 2
        +accordionHeadingSlot heading 3
        +accordionPanelSlot panel 3

mixin accordion(props = {})
  -
    // define types
    const accordionProps = {
      headingLevel: propTypesPreset.headingLevel.isRequired,
      activatedIndex: PropTypes.number,
    };

    // verifying props
    validateProps(accordionProps)(props);

    // merge user-supplied options with the defaults
    const defaultProps = {
      id: generateUid(),
      headingLevel: 2
    };

    const {
      headingLevel,
      activatedIndex,
      ...attrs
    } = {
      ...defaultProps,
      ...props,
    };

    const { prefix } = theme;

    // declaring slots
    const accordionHeadingSlots = [];
    const accordionPanelSlots = [];

  mixin accordionHeadingSlot
    - accordionHeadingSlots.push(block);

  mixin accordionPanelSlot
    - accordionPanelSlots.push(block);

  script(
    async
    data-pug
  ).
    window.usedComponents = window.usedComponents || new Set();
    usedComponents.add(`accordion`);
  div(
    id= id
    class= `${prefix}-accordion`
    data-init-activate= activatedIndex
  )&attributes(attrs)
    block
    each _, idx in accordionHeadingSlots
      -
        const headingId = generateUid();
        const panelId = generateUid();

      +heading({
        level: headingLevel,
        class: `${prefix}-accordion__header`
      })
        button(
          type= "button"
          id= headingId
          aria-expanded= JSON.stringify(idx === activatedIndex)
          aria-controls= panelId
          class= `${prefix}-accordion__tab`
        )
          - accordionHeadingSlots[idx]();
          +svgIcon({
            name: `chevron-down`,
            role: `presentation`,
            focusable: `false`,
            class: `${prefix}-accordion__tab__icon`
          })

      div(
        id= panelId
        role= "region"
        aria-labelledby= headingId
        hidden= (idx === activatedIndex ? null : true)
        class= [
          `${prefix}-accordion__panel`,
          idx === activatedIndex ? `active` : false,
        ]
      )
        - accordionPanelSlots[idx]();
