include /components/atoms/svg-icon/index.pug
include /components/atoms/buttons/icon.pug

//- @pugdoc
  name: slidePanel
  description: create a sliding panel
  beforeEach: |
    include ../../utils/util
    include ../../atoms/svg-icon/index.pug
    include ../../atoms/buttons/icon.pug
  arguments:
    - {object} props
    - {string} props.label the label of panel
    - {boolean} [props.useCloseBtn=true] whether to use the close button
    - |
      {string} [props.closeBtnPosition=`top-right`] the position of close button
    - |
      {string} [props.tag=`div`]
      the HTML tag name for the element enclosing the panel
  slots:
    - panelBodySlot the slot for body of panel
  examples:
    - |
      +slidePanel({
        label: 'setting',
        useCloseBtn: true,
        closeBtnPosition: `top-right`,
        tag: 'div',
        class: '_side',
        id: 'slide-nav',
      })
        +panelBodySlot
          slide panel

mixin slidePanel(props)
  -
    const slidePanelProps = {
      label: PropTypes.string.isRequired,
      useCloseBtn: PropTypes.bool,
      closeBtnPosition: PropTypes.oneOf([
        `top-left`,
        `top-right`,
        `bottom-left`,
        `bottom-right`,
      ]),
      tag: PropTypes.string,
    };
    const slidePanelValidate = validateProps(slidePanelProps);
    const defaults = {
      useCloseBtn: true,
      closeBtnPosition: `top-right`,
      tag: `div`,
    };

    const {
      label,
      useCloseBtn,
      closeBtnPosition,
      tag,
      id,
      class: cn,
      ...attrs
    } = {
      ...defaults,
      ...props,
    };
    slidePanelValidate({
      label,
      useCloseBtn,
      closeBtnPosition,
      tag,
    });

    const {prefix} = theme;
    const uid = id || generateUid();
    const [closeBtnPosY, closeBtnPosX] = closeBtnPosition.split(`-`);

    let panelBodySlot = null;

  mixin panelBodySlot
    - panelBodySlot = block;

  script(
    async
    data-pug
  ).
    window.usedComponents = window.usedComponents || new Set();
    usedComponents.add(`slide-panel`);
  #{tag}.slide-panel(
    id= uid
    aria-label= label
    role= `region`
    class= [
      `${prefix}-slide-panel`,
      useCloseBtn && `${prefix}-slide-panel--btn-${closeBtnPosY}`,
      cn,
    ]
    hidden
  )&attributes(attrs)
    div(class =[
      `${cn}__inner`,
    ])
      block
      - panelBodySlot && panelBodySlot();
      if (useCloseBtn)
        +iconButton({
          type: 'button',
          size: 'medium',
          appearance: 'ghost',
          icon: 'xmark',
          label: `close ${label}`,
          class: [
            `closer`,
            `${prefix}-slide-panel__btn-close`,
            `${prefix}-slide-panel__btn-close--${closeBtnPosY}`,
            `${prefix}-slide-panel__btn-close--${closeBtnPosX}`,
          ],
        })