include /components/atoms/heading/index

//- @pugdoc
  name: archiveTimeline
  description: create archive timeline
  beforeEach: |
    include ../../utils/util
    include ../../atoms/heading/index
  arguments:
    - {object} props
    - {object} props.archives the collection that is consist of archives
    - {number} props.headingLevel [2] the level of year as heading
    - {number} [props.displayYearNum] [2] the number of years to be display
  examples:
    - |
      +archiveTimeline({archives: mapArchives(), headingLevel: 2})

mixin archiveTimeline(props = {})
  -
    // define types
    const archivesProps = {
      archives: PropTypes.object.isRequired,
      headingLevel: propTypesPreset.headingLevel.isRequired,
      sectionHeadingProp: propTypesPreset.heading,
      displayYearNum: PropTypes.number,
    };

    // verifying props
    validateProps(archivesProps)(props);

    // merge user-supplied options with the defaults
    const defaultProp = {
      archives: {},
      headingLevel: 2,
      displayYearNum: 2,
    };

    const {
      archives,
      headingLevel,
      displayYearNum,
      ...attrs
    } = {
      ...defaultProp,
      ...props,
    };

    const { prefix } = theme;

  div(class= `${prefix}-timeline`)&attributes(attrs)
    -
      let count = 0;
      const reverse = (a, b) => Number(a) > Number(b) ? -1 : 1;

    each year in Object.keys(archives).reverse()
      -
        const yearlyItem = ++count <= displayYearNum ? archives[year] : {};
        const months = Object.keys(yearlyItem).sort(reverse);

      +heading({
        level: headingLevel,
        class: `${prefix}-timeline__year`
      })
        = year
        | &rsquo;
        = " "
        span
          = _p('label.posts.default')

      if months && months.length
        ol(class= `${prefix}-timeline__list`)
          each month in months
            - const monthlyItem = yearlyItem[month];
            if monthlyItem && monthlyItem.length
              each item in monthlyItem
                li(class= `${prefix}-timeline__list__item`)
                  a(
                    href= item.permalink
                    class= `${prefix}-timeline__link`
                  )
                    span(class= `${prefix}-timeline__title`)
                      = item.title
                    if item.subtitle
                      span(class= `${prefix}-timeline__title--sub`)
                        = item.subtitle
      else
        span(class= `${prefix}-timeline__more`)
          a(
            href= `${
              isDevelopment
                ? url_for(`/archives/${year}`)
                : fullUrl(`/archives/${year}`)
            }`
          )
            = _p('label.read_more')
