//- @pugdoc
  name: pageTitle
  description: title element based on layout type
  beforeEach: |
    include /components/utils/util
  example: |
    +pageTitle

mixin pageTitle
  title= getTitle()

//- @pugdoc
  name: pageSequenceLink
  description: sequential link elements
  beforeEach: |
    include /components/utils/util
  example: |
    +pageSequenceLink

mixin pageSequenceLink
  -
    const { prev_link, prev, next_link, next } = page;
    const prevLink = prev_link ? `${config.url}/${prev_link}` : prev?.permalink;
    const nextLink = next_link ? `${config.url}/${next_link}` : next?.permalink;

  if (prevLink)
    link(
      rel= `prev`
      href= stripFileName(prevLink)
    )
  if (nextLink)
    link(
      rel= `next`
      href= stripFileName(nextLink)
    )

//- @pugdoc
  name: preLoadImage
  description: preload link element for representational image
  example: |
    +preLoadImage

mixin preLoadImage
  -
    const imageObj = representative_image(page);
  if (imageObj)
    link(
      rel= `preload`
      as= `image`
      href= full_url(imageObj.path)
    )

//- @pugdoc
  name: openGraph
  description: create og meta element
  beforeEach: |
    include /components/utils/util
  example: |
    +openGraph({
      url: `https://example.com`
    })

mixin openGraph(props)
  -
    const defaultProps = {
      title: getTitle(),
      type: `blog`,
      url: stripFileName(url),
    };
    const properties = {
      ...defaultProps,
      ...props,
    };
  | !{ open_graph(properties) }

//- @pugdoc
  name: siteVerification
  description: create meta element for site-verification
  example: |
    +siteVerification

mixin siteVerification
  each val, prop in (theme.site_verification || [])
    meta(
      name= prop
      content= val
    )

//- @pugdoc
  name: styles
  description: |
    create style elements from the stylesheet created by the theme
    and the stylesheet specified.
  arguments:
    - {array} paths
  examples:
    - +styles([])
    - +styles(["//mydomain.com/external/style.css"])

mixin styles(paths = [])
  link(
    rel= `stylesheet`
    href= url_for(`/css/index.css`)
  )
  each path in paths
    link(
      rel= `stylesheet`
      href= path
    )

//- @pugdoc
  name: analytics
  description: create meta element for google analytics, supported only GA 4
  example: |
    +analytics

mixin analytics
  if theme.analytics.google
    script(
      async
      src= `https://www.googletagmanager.com/gtag/js?id=${
        theme.analytics.google
      }`
    )
    script.
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag(`js`, new Date());
      gtag(`config`, `#{theme.analytics.google}`);

//- @pugdoc
  name: jsonLD
  description: create JSON-LD script element
  beforeEach: |
    include /components/utils/util
  example: |
    +jsonLD

mixin jsonLD
  -
    const jsonLdProps = getJsonLdProps(page);
    const currPageType = is_post()
      ? `post`
      : (is_archive() || is_category() || is_tag())
        ? `collection`
        : `home`;

    const jsonLD = {
      "@context": `http://schema.org`,
      ...jsonLdProps.getType(currPageType),
      ...jsonLdProps.getName(),
      ...jsonLdProps.getUrl(),
      ...jsonLdProps.getDescription(),
      ...jsonLdProps.getCopyRightHolder(),
      ...jsonLdProps.getImage(),
      ...jsonLdProps.getAuthor(),
      ...([`post`].includes(currPageType) ? jsonLdProps.getPostLD() : {}),
      ...(
        [`collection`, `home`].includes(currPageType)
          ? jsonLdProps.getItemList()
          : undefined
      ),
    };
  script(type= `application/ld+json`)
    | !{ JSON.stringify(jsonLD) }

//- @pugdoc
  name: adsense
  description: create meta element for google adsense
  example: |
    +adsence

mixin adsense
  if theme.adsense
    -
      const url =
      `https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=`;
    script(
      async
      src= `${url}${theme.adsense}`
      crossorigin="anonymous"
    )
