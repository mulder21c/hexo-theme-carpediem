include ../../atoms/datetime/index
include ../../atoms/category/index

//- @pugdoc
  name: postCard
  description: create post card component
  beforeEach: |
    include ../../utils/util
    include ../../atoms/datetime/index
    include ../../atoms/category/index
  arguments:
    - {object} props
    - {object} props.post hexo post object
    - {boolean} [props.isLink] [false] Whether to operate the card as a link
  examples:
    - |
      +postCard({post: hexoPost, isLink: true})

mixin postCard(props)
  -
    const postProps = {
      post: PropTypes.object.isRequired,
      isLink: PropTypes.bool,
    };
    const postValidate = validateProps(postProps);
    const defaults = {
      isLink: false,
    };
    const {
      post,
      isLink,
      ...attrs
    } = {
      ...defaults,
      ...props,
    };
    postValidate({
      post,
      isLink,
    });

    const {prefix} = theme;
    const uid = id || generateUid();
    const titleId = generateUid();
    const dateId = generateUid();
    const contentId = generateUid();
    const datetime = post.updated || post.date;
    const categories = post.categories.data;
    const tags = post.tags;
    const thumb = post.thumbnail || post.hero || post?.photos?.unshift();
    const hasCategoryLink = !isLink;

  div(
    class= [
      `${prefix}-post-card`,
      {[`${prefix}-post-card--link`]: isLink}
    ]
  )
    if (thumb)
      img(
        src= thumb
        alt= ""
        loading= "lazy"
        class= `${prefix}-post-card__thumb`
        role= "none"
      )

    a(
      id= titleId
      href= post.permalink
      aria-describedby= `${contentId}`
      class= `${prefix}-post-card__heading`
    )= post.title

    div(class=`${prefix}-post-card__meta`)
      +datetime({
        datetime,
        label: _p(`label.date.posted`),
        visibleLabel: 'ðŸ“†',
        class: `${prefix}-post-card__meta__item`
      })

      +category({
        categories,
        visibleLabel: 'ðŸ“‚',
        useLink: hasCategoryLink,
        class: `${prefix}-post-card__meta__item`,
        level: `all`,
        separator: `angle-right`,
      })

    p(
      id= contentId
      class= `${prefix}-post-card__content`
    )= stripHTML(post.content, 250)
