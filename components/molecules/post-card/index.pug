include ../../atoms/datetime/index
include ../../atoms/category/index

//- @pugdoc
  name: postCard
  description: create post card component
  beforeEach: |
    include ../../utils/util
    include ../../atoms/datetime/index
    include ../../atoms/category/index
  arguments:
    - {object} props
    - |
      {object} props.post hexo post object
      @see https://hexo.io/docs/variables.html#Page-Variables
    - {boolean} [props.isLink] [false] Whether to operate the card as a link
  examples:
    - |
      +postCard({post, isLink: true})

mixin postCard(props = {})
  -
    site.components.add(`post-card`);

    // define types
    const postProps = {
      post: PropTypes.object.isRequired,
      isLink: PropTypes.bool,
    };

    // verifying props
    validateProps(postProps)(props);

    // merge user-supplied options with the defaults
    const defaultProps = {
      isLink: false,
    };

    const {
      post,
      isLink,
      ...attrs
    } = {
      ...defaultProps,
      ...props,
    };

    const { prefix } = theme;
    const contentId = generateUid();
    const metaId = generateUid();
    const datetime = post.updated || post.date;
    const categories = post.categories.data;
    const tags = post.tags;
    const thumb = post.thumbnail || post.hero || post?.photos?.unshift();
    const hasCategoryLink = !isLink;

  div(
    class= [
      `${prefix}-post-card`,
      { [`${prefix}-post-card--link`]: isLink },
    ]
  )&attributes(attrs)
    if (thumb)
      img(
        src= thumb
        alt= ""
        loading= "lazy"
        class= `${prefix}-post-card__thumb`
        role= "none"
      )

    a(
      href= post.permalink
      aria-describedby= `${metaId} ${contentId}`
      class= `${prefix}-post-card__heading`
    )= post.title

    div(
      id= metaId
      class=`${prefix}-post-card__meta`
    )
      +datetime({
        datetime,
        label: _p(`label.date.published`),
        visibleLabel: 'ðŸ“†',
        class: `${prefix}-post-card__meta__item`
      })

      +category({
        categories,
        visibleLabel: 'ðŸ“‚',
        useLink: hasCategoryLink,
        class: `${prefix}-post-card__meta__item`,
        level: `all`,
        separator: `angle-right`,
      })

    p(
      id= contentId
      class= `${prefix}-post-card__content`
    )= truncate(stripHTML(post.content), 300)
