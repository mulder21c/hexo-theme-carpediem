include /components/atoms/datetime/index
include /components/atoms/category/index

//- @pugdoc
  name: articleCard
  description: article card component
  beforeEach: |
    include /components/utils/util
    include /components/atoms/datetime/index
    include /components/atoms/category/index

  arguments:
    - {object} props
    - |
      {object} props.post hexo post object
      @see https://hexo.io/docs/variables.html#Page-Variables
    - {boolean} [props.isLink] [false] Whether to operate the card as a link
  examples:
    - |
      +articleCard({post, isLink: true})

mixin articleCard(props = {})
  -
    site.components.add(`article-card`);

    // define types
    const postProps = {
      post: PropTypes.object.isRequired,
      isLink: PropTypes.bool,
    };

    // verifying props
    validateProps(postProps)(props);

    // merge user-supplied options with the defaults
    const defaultProps = {
      isLink: false,
    };

    const {
      post,
      isLink,
      ...attrs
    } = {
      ...defaultProps,
      ...props,
    };

    const { prefix } = theme;
    const contentId = generate_uid();
    const metaId = generate_uid();
    const datetime = post.updated || post.date;
    const categories = post.categories.toArray();
    const thumb =
      asset_url(post.thumbnail, post)
      || asset_url(post.hero, post)
      || post?.photos?.unshift();
    const hasCategoryLink = !isLink;

  div(
    class= [
      `${prefix}-article-card`,
      { [`${prefix}-article-card--no-thumb`]: !thumb },
      { [`${prefix}-article-card--link`]: isLink },
    ]
  )&attributes(attrs)
    if (thumb)
      img(
        src= thumb
        alt= ""
        loading= "lazy"
        class= `${prefix}-article-card__thumb`
        role= "none"
      )

    a(
      href= isDevelopment ? url_for(post.path) : post.permalink
      aria-describedby= `${metaId} ${contentId}`
      class= `${prefix}-article-card__heading`
    )
      span(class= `${prefix}-article-card__heading--primary`)= post.title
      if post.subtitle
        span(class= `${prefix}-article-card__heading--sub`)= post.subtitle

    div(
      id= metaId
      class=`${prefix}-article-card__meta`
    )
      +datetime({
        datetime,
        label: _p(`label.date.published`),
        visibleLabel: 'ðŸ“†',
        class: `${prefix}-article-card__meta__item`
      })

      +category({
        categories,
        visibleLabel: 'ðŸ“‚',
        useLink: hasCategoryLink,
        class: `${prefix}-article-card__meta__item`,
        level: `all`,
        separator: `angle-right`,
      })
    p(
      id= contentId
      class= `${prefix}-article-card__content`
    )!= truncate(strip_html(post.content), 300)
