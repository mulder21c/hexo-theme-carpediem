include ../atoms/svg-icon/index
//- @pugdoc
  name: articleAuthor
  description: area for introducing author
  beforeEach: |
    include /components/utils/util
    include ../../atoms/svg-icon/index
  arguments:
    - {object} props
    - |
      {string} [props.gravatar] [`/images/author.svg`]
      the path or url for gravatar
    - {string} [props.name] the name of author
    - {string} [props.description] the description for author
    - {string} [props.social] the social links for author
  examples:
    - |
      +articleAuthor({
        name: config.author,
        gravatar: theme.profile.gravatar,
        description: theme.profile.description,
        social: theme.profile.social,
      })

mixin articleAuthor(props= {})
  -
    // define types
    const articleAuthorProps = {
      gravatar: PropTypes.string,
      name: PropTypes.string,
      description: PropTypes.string,
      social: PropTypes.object,
    };

    // verifying props
    validateProps(articleAuthorProps)(props);

    const {
      gravatar,
      name,
      description,
      social,
      ...attrs
    } = {
      ...props,
    };

    const { prefix } = theme;
    const defaultGravatar = `/images/author.svg`;
    const hasDesc = !!description;
    const socialList = Object.entries(social).filter(([name, url]) => url );

  div(
    class= [
      `${prefix}-author`,
      hasDesc ? `` : `${prefix}-author--no-desc`,
    ]
  )&attributes(attrs)
    span(class= `${prefix}-author__gravatar`)
      img(
        src= fullUrl(gravatar || defaultGravatar)
        alt= ""
        role="none"
      )
    if name
      p(
        class= `${prefix}-author__name`
      )= name
    if socialList.length
      div(
        class= `${prefix}-author__social`
      )
        each socialItem in socialList
          - const [socialName, socialURL] = socialItem;
          a(
            href= socialURL
            aria-label= socialName
            class= `${prefix}-author__social__link`
          )
            +svgIcon({
              name: socialName,
              role: `presentation`,
              focusable: `false`,
              class: [
                `${prefix}-author__social__icon`,
                `${prefix}-author__social__icon--${socialName}`,
              ],
            })


    if description
      p(
        class= `${prefix}-author__desc`
      )= description
