//- @pugdoc
  name: heading
  description: create heading element
  beforeEach: |
    include ../../utils/util
  arguments:
    - {object} props
    - {string} props.level the level(rank) of heading
    - {boolean} [props.visible] whether an element is visible or not
  slots:
    - headingSlot the slot for heading content
  examples:
    - |
      +heading({level: 1 }) heading
mixin heading(props)
  -
    // verifying props
    const headingProps = {
      level: PropTypes.number.custom(({prop}) => {
        if (Number.isInteger(prop) && prop > 0 && prop < 7) {
          return true;
        } else {
          throw new Error('level must be an integer between 1 and 6.');
        }
      }).isRequired,
      visible: PropTypes.bool
    };
    const headingValidate = validateProps(headingProps);
    const defaults = {
      level: 1,
      visible: true
    };
    const {
      level,
      visible,
      ...attrs
    } = {
      ...defaults,
      ...props,
    };
    headingValidate({
      level,
      visible
    });

    const {prefix} = theme;
    const className = [
      `${prefix}-heading--level-${level}`,
      {[`sr-only`]: !visible}
    ];

    let headingSlot = null;
    let tag = `h${level}`;

  mixin headingSlot
    - headingSlot = block;

  #{tag}(class= className)&attributes(attrs)
    block
    if (headingSlot)
      - headingSlot();
