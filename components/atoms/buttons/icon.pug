//- @pugdoc
  name: iconButton
  description: create icon button element
  beforeEach: |
    include ../../utils/util
  arguments:
    - {object} props
    - {string} props.icon name of icon
    - {string} props.label label of button
    - {string} [props.type] ['button'] the value of type attribute for button
    - |
      {string} [props.size] ['medium'] size of button- size of button
      <br> one of `'small'`, `'medium'`, `'large'``
    - |
      {string} [props.appearance] ['outline'] appearance of button
      <br> one of `'fill'`, `'outline'`, `'ghost'`
    - |
      {string} [props.layout] [`icon-only`] layout of button
      <br> one of `'icon-only', `icon-text``
  examples:
    - |
      +iconButton({
        type: 'button',
        size: 'medium',
        appearance: 'outline',
        icon: 'tty',
        label: 'tel'
      })
mixin iconButton(props)
  -
    // verifying props
    const iconBtnProps = {
      icon: PropTypes.string.isRequired,
      label: PropTypes.string.isRequired,
      size: PropTypes.oneOf([
        `small`,
        `medium`,
        `large`,
      ]),
      appearance: PropTypes.oneOf([
        `fill`,
        `outline`,
        `ghost`,
      ]),
      layout: PropTypes.oneOf([
        `icon-only`,
        `icon-text`,
      ]),
    };
    const iconBtnValidate = validateProps(iconBtnProps);
    const defaults = {
      type: `button`,
      size: `medium`,
      appearance: `outline`,
      layout: `icon-only`
    };
    const {
      type,
      size,
      appearance,
      icon,
      label,
      layout,
      ...attrs
    } = {
      ...defaults,
      ...props,
    };
    iconBtnValidate({
      size,
      appearance,
      icon,
      label,
      layout
    });

    const isIconOnly = layout === `icon-only`;
    const {prefix} = theme;
    const className = [
      `${prefix}-btn-icon`,
      { [`${prefix}-btn-icon--${size}`]: size },
      { [`${prefix}-btn-icon--${appearance}`]: appearance },
      { [`${prefix}-btn-icon--${layout}`]: layout }
    ];
    const {
      iconName,
      iconCategory
    } = getIconCategory(icon);

  button(
    type=type
    aria-label=isIconOnly && label
    class=className
  )&attributes(attrs)
    svg(
      class=`${prefix}-btn-icon__icon`
      role="presentation"
      focusable="false"
    )
      use(xlink:href=`/images/${iconCategory}.svg#${iconName}`)
    if !isIconOnly
      span(class=`${prefix}-btn-icon__label`)= label
