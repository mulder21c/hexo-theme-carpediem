//- @pugdoc
  name: boxyRadio
  description: create input radio element
  beforeEach: |
    include ../../utils/util
  arguments:
    - {object} props
    - {string} props.name name of radio
    - {string|number|boolean} props.value the value of radio
    - |
      {string} [props.label] label of radio<br>
      If do not specify this value, you must author and style label element.
    - |
      {string} [props.id] the value of radio's id attribute
      and label's for attribute
    - {boolean} [props.checked] the checked state of radio
    - {object} [props.inputAttrs] the attrs for input:radio
  examples:
    - |
      // label property
      +boxyRadio({
        name: 'answer',
        value: 1,
        label: 'boxy radio'
      })
      // label from block
      +boxyRadio({
        name: 'answer',
        value: 1
      })
        boxy radio
mixin boxyRadio(props)
  -
    // verifying props
    const radioProps = {
      name: PropTypes.string.isRequired,
      checked: PropTypes.bool,
      id: PropTypes.string,
      label: PropTypes.string,
      value: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number,
        PropTypes.bool,
      ]).isRequired,
      inputAttrs: PropTypes.object,
    };
    const radioValidate = validateProps(radioProps);
    const defaults = {
      inputAttrs: {},
    };
    const {
      checked,
      id,
      name,
      value,
      label,
      inputAttrs,
      ...attrs
    } = {
      ...defaults,
      ...props,
    };
    radioValidate({
      label,
      checked,
      id,
      name,
      label,
      value
    });

    const {prefix} = theme;
    const uid = id || generateUid();

  label(class=`${prefix}-radio-boxy`)&attributes(attrs)
    input(
      type="radio"
      id=uid
      name=name
      value=value
      checked=checked
      class=`${prefix}-radio-boxy__control`
    )&attributes(inputAttrs)
    span(class=`${prefix}-radio-boxy__box`)
      if (label)
        = label
      else
        block
