//- @pugdoc
  name: boxyRadio
  description: box styled radio component
  beforeEach: |
    include /components/utils/util
  arguments:
    - {object} props
    - {string} props.name the value of radio's name attribute
    - {string|number} props.value the value of radio's value attribute
    - |
      {string} [props.id] the value of radio's id attribute
      and label's for attribute<br>
      If not specified, an auto-generated id is assigned.
    - |
      {string} [props.label] label of radio<br>
      If do not specify this value, you must author and style label element.
    - {boolean} [props.checked] [`false`] the checked state of radio
    - {object} [props.inputAttrs] the attrs for input:radio
  examples:
    - |
      // using label property
      +boxyRadio({
        name: `answer`,
        value: 1,
        label: `boxy radio`
      })

      // using block instead of label property
      +boxyRadio({
        name: `answer`,
        value: 1
      })
        boxy radio

mixin boxyRadio(props = {})
  -
    // define types
    const radioProps = {
      name: PropTypes.string.isRequired,
      value: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number,
      ]).isRequired,
      checked: PropTypes.bool,
      id: PropTypes.string,
      label: PropTypes.string,
      inputAttrs: PropTypes.object,
    };

    // verifying props
    validateProps(radioProps)(props);

    // merge user-supplied options with the defaults
    const defaultProps = {
      id: generate_uid(),
      checked: false,
      inputAttrs: {},
    };

    const {
      name,
      value,
      id,
      label,
      checked,
      inputAttrs,
      ...attrs
    } = {
      ...defaultProps,
      ...props,
    };

    const { prefix } = theme;

  label(class= `${prefix}-radio-boxy`)&attributes(attrs)
    input(
      type= `radio`
      id= id
      name= name
      value= value
      checked= checked
      class= `${prefix}-radio-boxy__control`
    )&attributes(inputAttrs)
    span(class= `${prefix}-radio-boxy__box`)
      if (label)
        = label
      else
        block
